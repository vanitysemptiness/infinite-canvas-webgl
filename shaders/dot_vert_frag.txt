#version 300 es
layout(location = 0) in vec2 a_position;
uniform float u_aspect_ratio;
uniform float u_zoom;
uniform vec2 u_offset;

void main() {
    vec2 zoomedPosition = a_position * u_zoom;
    vec2 offsetPosition = zoomedPosition + u_offset;
    
    // Wrap the position to create an infinite grid effect
    offsetPosition = fract(offsetPosition + 0.5) - 0.5;
    
    // Adjust for aspect ratio while maintaining square grid
    float adjustedX = offsetPosition.x * min(1.0, 1.0 / u_aspect_ratio);
    float adjustedY = offsetPosition.y * min(1.0, u_aspect_ratio);
    
    gl_Position = vec4(adjustedX, adjustedY, 0.0, 1.0);
    gl_PointSize = 2.0;
}


#version 300 es
precision mediump float;
out vec4 outColor;

void main() {
    outColor = vec4(0.8, 0.8, 0.8, 1.0);
}